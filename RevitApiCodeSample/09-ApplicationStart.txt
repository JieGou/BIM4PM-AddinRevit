 class App : IExternalApplication
    {
        public static PushButton Pushbutton { get; set; }
    
        public Result OnStartup(UIControlledApplication application)
        {
            OnButtonCreate(application);

            return Result.Succeeded;
        }

        public Result OnShutdown(UIControlledApplication a)
        {
            return Result.Succeeded;
        }



        /// <summary>
        /// Create a custom button on the ribbon
        /// </summary>
        /// <param name="application"></param>
        private void OnButtonCreate(UIControlledApplication application)
        {

            // Create a custom ribbon tab
            String tabName = "NewTab";

            //Create Ribbon panel if it is not created already
            try { application.CreateRibbonTab(tabName); } catch { }


            string executableLocation = Path.GetDirectoryName(
                Assembly.GetExecutingAssembly().Location);
            string dllLocation = Path.Combine(executableLocation, "ProjectName.dll");

            PushButtonData buttondata = new PushButtonData("ProjectNameBtn", "Project \nName",
                dllLocation, "ProjectName.Command");
            buttondata.ToolTip = "This addin will do something";

            BitmapImage pb1Image = new BitmapImage(new Uri("pack://application:,,,/ProjectName;component/Resources/Project.ico"));
            buttondata.LargeImage = pb1Image;

            var ribbonPanel = application.CreateRibbonPanel(tabName, "Productivity");
            
            // Store the PushButton reference. Later we can use 
            // Pushbutton.Enable = false/true
            Pushbutton = ribbonPanel.AddItem(buttondata) as PushButton;
        }
    }
